{"version":3,"sources":["components/Personal.js","components/ExperienceNEducation.js","components/Expertise.js","App.js","index.js"],"names":["Field","props","htmlTag","id","className","personalPreviousEdit","personalInfo","personalEditChange","personalEditMode","CustomTag","value","autoFocus","onChange","e","onFocus","target","select","onClick","Personal","Item","category","storComp","storCity","storYrFrm","storYrTo","storRole","storRoleDesc","deleteInputVal","previewModeStatus","map","index","AddItem","categoryAdd","addItemMode","submitItem","updateInputVal","cancelInput","inputKey","buttonLabel","detailsEntity","detailsIdentity","onSubmit","type","name","placeholder","Main","itemAdd","SkillsItem","itemStor","itemAddStatus","el","SkillsAdd","Expertise","expertStor","skillsAdd","App","workingMode","setState","document","querySelector","classList","remove","add","previewMode","state","previousEdit","cleanPersonalEditMode","key","preventDefault","stateKey","inpKey","addKey","inpKeyIndex","concat","console","log","specificState","inputs","querySelectorAll","textArea","el1","index1","filter","el2","index2","firstName","lastName","currentRole","address1","address2","phone","email","linkedin","expStorComp","expStorCity","expStorYrFrm","expStorYrTo","expStorRole","expStorRoleDesc","expInpComp","expInpCity","expInpYrFrm","expInpYrTo","expInpRole","expInpRoleDesc","experienceAdd","eduStorComp","eduStorCity","eduStorYrFrm","eduStorYrTo","eduStorRole","eduStorRoleDesc","eduInpComp","eduInpCity","eduInpYrFrm","eduInpYrTo","eduInpRole","eduInpRoleDesc","educationAdd","expertInp","bind","this","class","ExperienceNEducation","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.913231fc.chunk.js","sourcesContent":["import \"../App.css\";\n\nconst Field = (props) => {\n  const {\n    htmlTag,\n    id,\n    className,\n    personalPreviousEdit,\n    personalInfo,\n    personalEditChange,\n    personalEditMode,\n  } = props;\n\n  const CustomTag = `${htmlTag}`;\n\n  return (\n    <>\n      {!personalInfo[id][1] ? (\n        <CustomTag\n          className={className}\n          id={id}\n          onClick={(e) => {\n            personalEditMode(e, personalPreviousEdit);\n          }}\n        >\n          {personalInfo[id][0]}\n        </CustomTag>\n      ) : (\n        <input\n          id={id}\n          value={personalInfo[id][0]}\n          autoFocus=\"true\"\n          onChange={(e) => {\n            personalEditChange(e);\n          }}\n          onFocus={(e) => {\n            e.target.select();\n          }}\n        ></input>\n      )}\n    </>\n  );\n};\n\nconst Personal = (props) => {\n  const {\n    personalPreviousEdit,\n    personalInfo,\n    personalEditMode,\n    personalEditChange,\n  } = props;\n\n  return (\n    <div className=\"ui grid personalBody\">\n      <div className=\"name left floated left aligned seven wide column\">\n        <div>\n          <Field\n            htmlTag=\"h1\"\n            id=\"firstName\"\n            className=\"ui huge header\"\n            personalPreviousEdit={personalPreviousEdit}\n            personalInfo={personalInfo}\n            personalEditMode={personalEditMode}\n            personalEditChange={personalEditChange}\n          />\n        </div>\n        <div>\n          <Field\n            htmlTag=\"h1\"\n            id=\"lastName\"\n            className=\"ui huge header\"\n            personalPreviousEdit={personalPreviousEdit}\n            personalInfo={personalInfo}\n            personalEditMode={personalEditMode}\n            personalEditChange={personalEditChange}\n          />\n        </div>\n        <div>\n          <Field\n            htmlTag=\"p\"\n            id=\"currentRole\"\n            className=\"role\"\n            personalPreviousEdit={personalPreviousEdit}\n            personalInfo={personalInfo}\n            personalEditMode={personalEditMode}\n            personalEditChange={personalEditChange}\n          />\n        </div>\n      </div>\n      <div className=\"right floated right aligned six wide column pdetails\">\n        <div>\n          <Field\n            htmlTag=\"p\"\n            id=\"address1\"\n            className=\"address\"\n            personalPreviousEdit={personalPreviousEdit}\n            personalInfo={personalInfo}\n            personalEditMode={personalEditMode}\n            personalEditChange={personalEditChange}\n          />\n        </div>\n        <div>\n          <Field\n            htmlTag=\"p\"\n            id=\"address2\"\n            className=\"address\"\n            personalPreviousEdit={personalPreviousEdit}\n            personalInfo={personalInfo}\n            personalEditMode={personalEditMode}\n            personalEditChange={personalEditChange}\n          />\n        </div>\n        <div>\n          <i className=\"phone icon\"></i>\n          <Field\n            htmlTag=\"span\"\n            id=\"phone\"\n            personalPreviousEdit={personalPreviousEdit}\n            personalInfo={personalInfo}\n            personalEditMode={personalEditMode}\n            personalEditChange={personalEditChange}\n          />\n        </div>\n        <div>\n          <i className=\"mail icon\"></i>\n          <Field\n            htmlTag=\"span\"\n            id=\"email\"\n            personalPreviousEdit={personalPreviousEdit}\n            personalInfo={personalInfo}\n            personalEditMode={personalEditMode}\n            personalEditChange={personalEditChange}\n          />\n        </div>\n        <div>\n          <i className=\"linkedin icon\"></i>\n          <Field\n            htmlTag=\"span\"\n            id=\"linkedin\"\n            personalPreviousEdit={personalPreviousEdit}\n            personalInfo={personalInfo}\n            personalEditMode={personalEditMode}\n            personalEditChange={personalEditChange}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Personal;\n","import \"../App.css\";\n\nconst Item = (props) => {\n  const {\n    category,\n    storComp,\n    storCity,\n    storYrFrm,\n    storYrTo,\n    storRole,\n    storRoleDesc,\n    deleteInputVal,\n    previewModeStatus,\n  } = props;\n\n  return storComp.map((e, index) => {\n    return (\n      <div className=\"ui grid\">\n        <div className=\"left floated left aligned five wide column contentTimeline\">\n          <div>\n            {storComp[index]}, {storCity[index]}\n          </div>\n          <div>\n            {storYrFrm[index]} - {storYrTo[index]}\n          </div>\n        </div>\n        <div className=\"right floated left aligned ten wide column\">\n          <div className=\"roleItem\">{storRole[index]}</div>\n          <div>{storRoleDesc[index]}</div>\n        </div>\n        <div className=\"one wide column\">\n          {/* <i className=\"edit icon\"></i> */}\n          {previewModeStatus ? (\n            <></>\n          ) : (\n            <button className=\"ui icon button\">\n              <i\n                className=\"delete icon\"\n                onClick={(e) => deleteInputVal(e, category, index)}\n              ></i>\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  });\n};\n\nconst AddItem = (props) => {\n  const {\n    category,\n    categoryAdd,\n    addItemMode,\n    submitItem,\n    updateInputVal,\n    cancelInput,\n    previewModeStatus,\n  } = props;\n\n  let inputKey = [];\n  let buttonLabel = \"\";\n  let detailsEntity = \"\";\n  let detailsIdentity = \"\";\n\n  if (category === \"experience\") {\n    inputKey = [\n      \"expInpComp\",\n      \"expInpCity\",\n      \"expInpYrTo\",\n      \"expInpYrFrm\",\n      \"expInpRole\",\n      \"expInpRoleDesc\",\n    ];\n    buttonLabel = \"Work Experience\";\n    detailsEntity = \"Company\";\n    detailsIdentity = \"Role\";\n  } else if (category === \"education\") {\n    inputKey = [\n      \"eduInpComp\",\n      \"eduInpCity\",\n      \"eduInpYrTo\",\n      \"eduInpYrFrm\",\n      \"eduInpRole\",\n      \"eduInpRoleDesc\",\n    ];\n    buttonLabel = \"Education\";\n    detailsEntity = \"University or School\";\n    detailsIdentity = \"Degree or Stream\";\n  }\n\n  return (\n    <>\n      {categoryAdd && !previewModeStatus ? (\n        <form\n          className=\"ui form\"\n          onSubmit={(e) => {\n            submitItem(e, category);\n          }}\n        >\n          <div className=\"field\">\n            <label>{detailsEntity} Name</label>\n            <input\n              type=\"text\"\n              name=\"company\"\n              id={category}\n              placeholder=\"Company Name\"\n              onChange={(e) => {\n                updateInputVal(e, category, inputKey[0], 0);\n              }}\n            ></input>\n          </div>\n          <div className=\"field\">\n            <label>City</label>\n            <input\n              type=\"text\"\n              name=\"city\"\n              id={category}\n              placeholder=\"City\"\n              onChange={(e) => {\n                updateInputVal(e, category, inputKey[1], 1);\n              }}\n            ></input>\n          </div>\n          <div className=\"two fields\">\n            <div className=\"field\">\n              <label>From</label>\n              <input\n                type=\"text\"\n                name=\"yearFrom\"\n                id={category}\n                placeholder=\"YYYY\"\n                onChange={(e) => {\n                  updateInputVal(e, category, inputKey[2], 2);\n                }}\n              ></input>\n            </div>\n            <div className=\"field\">\n              <label>To</label>\n              <input\n                type=\"text\"\n                name=\"yearTo\"\n                id={category}\n                placeholder=\"YYYY or Present\"\n                onChange={(e) => {\n                  updateInputVal(e, category, inputKey[3], 3);\n                }}\n              ></input>\n            </div>\n          </div>\n          <div className=\"field\">\n            <label>{detailsIdentity}</label>\n            <input\n              type=\"text\"\n              name=\"role\"\n              id={category}\n              placeholder=\"Role\"\n              onChange={(e) => {\n                updateInputVal(e, category, inputKey[4], 4);\n              }}\n            ></input>\n          </div>\n          <div className=\"field\">\n            <label>Further Descriptions or Achievements</label>\n            <textarea\n              name=\"roleDescription\"\n              id={category}\n              placeholder=\"Keep it short and simple. Maximum 3 sentences\"\n              onChange={(e) => {\n                updateInputVal(e, category, inputKey[5], 5);\n              }}\n            ></textarea>\n          </div>\n          <button\n            className=\"ui button\"\n            onClick={(e) => {\n              cancelInput(e, category);\n            }}\n          >\n            Cancel\n          </button>\n          <button className=\"ui button\" type=\"submit\">\n            + {buttonLabel}\n          </button>\n        </form>\n      ) : (\n        <>\n          {previewModeStatus ? (\n            <></>\n          ) : (\n            <button\n              className=\"ui button\"\n              onClick={(e) => {\n                addItemMode(e, category);\n              }}\n            >\n              + {buttonLabel}\n            </button>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nconst Main = (props) => {\n  const {\n    previewModeStatus,\n    storComp,\n    storCity,\n    storYrFrm,\n    storYrTo,\n    storRole,\n    storRoleDesc,\n    itemAdd,\n    category,\n    addItemMode,\n    submitItem,\n    updateInputVal,\n    deleteInputVal,\n    cancelInput,\n  } = props;\n\n  return (\n    <>\n      <Item\n        category={category}\n        storComp={storComp}\n        storCity={storCity}\n        storYrFrm={storYrFrm}\n        storYrTo={storYrTo}\n        storRole={storRole}\n        storRoleDesc={storRoleDesc}\n        itemAdd={itemAdd}\n        deleteInputVal={deleteInputVal}\n        previewModeStatus={previewModeStatus}\n      />\n      <AddItem\n        category={category}\n        categoryAdd={itemAdd}\n        addItemMode={addItemMode}\n        submitItem={submitItem}\n        updateInputVal={updateInputVal}\n        cancelInput={cancelInput}\n        previewModeStatus={previewModeStatus}\n      />\n    </>\n  );\n};\n\nexport default Main;\n","const SkillsItem = (props) => {\n  const { itemStor, itemAddStatus, deleteInputVal, previewModeStatus } = props;\n  return (\n    <div className=\"ui grid\">\n      {itemAddStatus ? (\n        <></>\n      ) : (\n        itemStor.map((el, index) => {\n          return (\n            <>\n              <div className=\"contentItem three wide column\">\n                <p className=\"roleItem\">{el}</p>\n              </div>\n              {previewModeStatus ? (\n                <></>\n              ) : (\n                <div className=\"one wide column\">\n                  <button className=\"ui icon button\">\n                    <i\n                      className=\"delete icon\"\n                      onClick={(e) => deleteInputVal(e, \"skills\", index)}\n                    ></i>\n                  </button>\n                </div>\n              )}\n            </>\n          );\n        })\n      )}\n    </div>\n  );\n};\n\nconst SkillsAdd = (props) => {\n  const {\n    itemAddStatus,\n    addItemMode,\n    updateInputVal,\n    cancelInput,\n    submitItem,\n    previewModeStatus,\n  } = props;\n\n  if (itemAddStatus) {\n    return (\n      <>\n        <form\n          className=\"ui form\"\n          onSubmit={(e) => {\n            submitItem(e, \"skills\");\n          }}\n        >\n          <div className=\"field\">\n            <label>Skills</label>\n            <input\n              type=\"text\"\n              name=\"Skills\"\n              id=\"skills\"\n              placeholder=\"Shine your top 5 skills here!\"\n              onChange={(e) => {\n                updateInputVal(e, \"skills\", \"expertInp\", 0);\n              }}\n            ></input>\n          </div>\n          <button\n            className=\"ui button\"\n            onClick={(e) => {\n              cancelInput(e, \"skills\");\n            }}\n          >\n            Cancel\n          </button>\n          <button className=\"ui button\" type=\"submit\">\n            + Skill\n          </button>\n        </form>\n      </>\n    );\n  } else {\n    return (\n      <>\n        {previewModeStatus ? (\n          <></>\n        ) : (\n          <button\n            className=\"ui button\"\n            onClick={(e) => addItemMode(e, \"skills\")}\n          >\n            + Skills\n          </button>\n        )}\n      </>\n    );\n  }\n};\n\nconst Expertise = (props) => {\n  const {\n    expertStor,\n    skillsAdd,\n    addItemMode,\n    updateInputVal,\n    cancelInput,\n    submitItem,\n    deleteInputVal,\n    previewModeStatus,\n  } = props;\n  return (\n    <>\n      <div className=\"subContent\">\n        <div className=\"sectionHeader ui medium header\">SKILLS</div>\n        <SkillsItem\n          itemStor={expertStor}\n          itemAddStatus={skillsAdd}\n          deleteInputVal={deleteInputVal}\n          previewModeStatus={previewModeStatus}\n        />\n        <SkillsAdd\n          itemAddStatus={skillsAdd}\n          addItemMode={addItemMode}\n          updateInputVal={updateInputVal}\n          cancelInput={cancelInput}\n          submitItem={submitItem}\n          previewModeStatus={previewModeStatus}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Expertise;\n","import React, { Component } from \"react\";\nimport Personal from \"./components/Personal\";\nimport \"./App.css\";\nimport ExperienceNEducation from \"./components/ExperienceNEducation\";\nimport Expertise from \"./components/Expertise\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      personalPreviousEdit: \"\",\n      personalInfo: {\n        firstName: [\"First Name\", false],\n        lastName: [\"Last Name\", false],\n        currentRole: [\"Current Role\", false],\n        address1: [\"Address 1\", false],\n        address2: [\"Address 2\", false],\n        phone: [\"Phone\", false],\n        email: [\"Email\", false],\n        linkedin: [\"Linkedin\", false],\n      },\n      previewModeStatus: false,\n      expStorComp: [],\n      expStorCity: [],\n      expStorYrFrm: [],\n      expStorYrTo: [],\n      expStorRole: [],\n      expStorRoleDesc: [],\n      expInpComp: \"\",\n      expInpCity: \"\",\n      expInpYrFrm: \"\",\n      expInpYrTo: \"\",\n      expInpRole: \"\",\n      expInpRoleDesc: \"\",\n      experienceAdd: false,\n      eduStorComp: [],\n      eduStorCity: [],\n      eduStorYrFrm: [],\n      eduStorYrTo: [],\n      eduStorRole: [],\n      eduStorRoleDesc: [],\n      eduInpComp: \"\",\n      eduInpCity: \"\",\n      eduInpYrFrm: \"\",\n      eduInpYrTo: \"\",\n      eduInpRole: \"\",\n      eduInpRoleDesc: \"\",\n      educationAdd: false,\n      expertStor: [],\n      expertInp: [],\n      skillsAdd: false,\n    };\n    this.workingMode = this.workingMode.bind(this);\n    this.previewMode = this.previewMode.bind(this);\n    this.personalEditMode = this.personalEditMode.bind(this);\n    this.cleanPersonalEditMode = this.cleanPersonalEditMode.bind(this);\n    this.personalEditChange = this.personalEditChange.bind(this);\n    this.addItemMode = this.addItemMode.bind(this);\n    this.cancelInput = this.cancelInput.bind(this);\n    this.submitItem = this.submitItem.bind(this);\n    this.updateInputVal = this.updateInputVal.bind(this);\n    this.deleteInputVal = this.deleteInputVal.bind(this);\n  }\n  workingMode = (e) => {\n    this.setState({ previewModeStatus: false });\n    document.querySelector(`button#preview`).classList.remove(\"positive\");\n    document.querySelector(`button#work`).classList.add(\"positive\");\n  };\n\n  previewMode = (e) => {\n    this.setState({ previewModeStatus: true });\n    document.querySelector(`button#work`).classList.remove(\"positive\");\n    document.querySelector(`button#preview`).classList.add(\"positive\");\n  };\n\n  personalEditChange = (e) => {\n    let personalInfo = { ...this.state.personalInfo };\n    personalInfo[e.target.id][0] = e.target.value;\n    this.setState({ personalInfo });\n  };\n\n  personalEditMode = (e, previousEdit) => {\n    this.cleanPersonalEditMode(e, previousEdit);\n    if (!this.state.personalInfo[e.target.id][1]) {\n      let personalInfo = { ...this.state.personalInfo };\n      personalInfo[e.target.id][1] = true;\n      this.setState({\n        personalPreviousEdit: e.target.id,\n        personalInfo,\n      });\n    }\n  };\n\n  cleanPersonalEditMode = (e, previousEdit) => {\n    if (previousEdit == null || previousEdit === \"\") {\n    } else if (previousEdit === e.target.id) {\n    } else if (this.state.personalInfo[previousEdit][1]) {\n      let personalInfo = { ...this.state.personalInfo };\n      personalInfo[previousEdit][1] = false;\n      if (\n        personalInfo[previousEdit][0] == null ||\n        personalInfo[previousEdit][0] === \"\"\n      ) {\n        personalInfo[previousEdit][0] = previousEdit;\n      }\n      this.setState({\n        personalPreviousEdit: \"\",\n        personalInfo,\n      });\n    }\n  };\n\n  addItemMode = (e, category) => {\n    let key = \"\";\n\n    if (category === \"experience\") key = \"experienceAdd\";\n    else if (category === \"education\") key = \"educationAdd\";\n    else if (category === \"skills\") key = \"skillsAdd\";\n\n    this.setState({\n      [key]: true,\n    });\n  };\n\n  cancelInput = (e, category) => {\n    let key = \"\";\n\n    if (category === \"experience\") key = \"experienceAdd\";\n    else if (category === \"education\") key = \"educationAdd\";\n    else if (category === \"skills\") key = \"skillsAdd\";\n    this.setState({ [key]: false });\n  };\n\n  submitItem = (e, category) => {\n    e.preventDefault();\n    let stateKey = [];\n    let inpKey = [];\n    let addKey = \"\";\n    if (category === \"experience\") {\n      stateKey = [\n        \"expStorComp\",\n        \"expStorCity\",\n        \"expStorYrTo\",\n        \"expStorYrFrm\",\n        \"expStorRole\",\n        \"expStorRoleDesc\",\n      ];\n      inpKey = [\n        \"expInpComp\",\n        \"expInpCity\",\n        \"expInpYrTo\",\n        \"expInpYrFrm\",\n        \"expInpRole\",\n        \"expInpRoleDesc\",\n      ];\n      addKey = \"experienceAdd\";\n    } else if (category === \"education\") {\n      stateKey = [\n        \"eduStorComp\",\n        \"eduStorCity\",\n        \"eduStorYrTo\",\n        \"eduStorYrFrm\",\n        \"eduStorRole\",\n        \"eduStorRoleDesc\",\n      ];\n      inpKey = [\n        \"eduInpComp\",\n        \"eduInpCity\",\n        \"eduInpYrTo\",\n        \"eduInpYrFrm\",\n        \"eduInpRole\",\n        \"eduInpRoleDesc\",\n      ];\n      addKey = \"educationAdd\";\n    } else if (category === \"skills\") {\n      stateKey = [\"expertStor\"];\n      inpKey = [\"expertInp\"];\n      addKey = \"skillsAdd\";\n    }\n    stateKey.map((el, index) => {\n      const inpKeyIndex = inpKey[index];\n\n      this.setState({\n        [el]: this.state[el].concat(this.state[inpKeyIndex]),\n        [addKey]: false,\n      });\n    });\n    console.log(this.state);\n  };\n\n  updateInputVal = (e, category, specificState, id) => {\n    if (id < 5) {\n      const inputs = document.querySelectorAll(`input#${category}`);\n      this.setState({\n        [specificState]: inputs[id].value,\n      });\n    } else {\n      const textArea = document.querySelector(`textarea#${category}`);\n      this.setState({\n        [specificState]: textArea.value,\n      });\n    }\n  };\n\n  deleteInputVal = (e, category, id) => {\n    let stateKey = [];\n    if (category === \"experience\") {\n      stateKey = [\n        \"expStorComp\",\n        \"expStorCity\",\n        \"expStorYrTo\",\n        \"expStorYrFrm\",\n        \"expStorRole\",\n        \"expStorRoleDesc\",\n      ];\n    } else if (category === \"education\") {\n      stateKey = [\n        \"eduStorComp\",\n        \"eduStorCity\",\n        \"eduStorYrTo\",\n        \"eduStorYrFrm\",\n        \"eduStorRole\",\n        \"eduStorRoleDesc\",\n      ];\n    } else if (category === \"skills\") {\n      stateKey = [\"expertStor\"];\n    }\n    stateKey.map((el1, index1) => {\n      this.setState({\n        [el1]: this.state[el1].filter((el2, index2) => index2 !== id),\n      });\n    });\n  };\n\n  render() {\n    const {\n      personalPreviousEdit,\n      personalInfo,\n      previewModeStatus,\n      expStorComp,\n      expStorCity,\n      expStorYrFrm,\n      expStorYrTo,\n      expStorRole,\n      expStorRoleDesc,\n      experienceAdd,\n      eduStorComp,\n      eduStorCity,\n      eduStorYrFrm,\n      eduStorYrTo,\n      eduStorRole,\n      eduStorRoleDesc,\n      educationAdd,\n      expertStor,\n      skillsAdd,\n    } = this.state;\n\n    return (\n      <>\n        <div className=\"ui grid\">\n          <div className=\"row\">\n            <h2 className=\"title ui icon header\">\n              <i className=\"paper plane icon\"></i>\n              <div class=\"content\">Resume Builder App</div>\n            </h2>\n          </div>\n          <div className=\"ui large buttons choices\">\n            <button\n              className=\"ui button positive\"\n              id=\"work\"\n              onClick={(e) => {\n                this.workingMode(e);\n              }}\n            >\n              Working Mode\n            </button>\n            <div className=\"or\"></div>\n            <button\n              className=\"ui button\"\n              id=\"preview\"\n              onClick={(e) => {\n                this.previewMode(e);\n              }}\n            >\n              Preview Mode\n            </button>\n          </div>\n        </div>\n        <div\n          className=\"mainBody\"\n          onClick={(e) => {\n            this.cleanPersonalEditMode(e, personalPreviousEdit);\n          }}\n        >\n          <Personal\n            personalPreviousEdit={personalPreviousEdit}\n            personalInfo={personalInfo}\n            personalEditMode={this.personalEditMode}\n            personalEditChange={this.personalEditChange}\n          />\n          <div className=\"mainContent\">\n            <div className=\"sectionHeader ui medium header\">\n              WORK EXPERIENCES\n            </div>\n            <ExperienceNEducation\n              previewModeStatus={previewModeStatus}\n              storComp={expStorComp}\n              storCity={expStorCity}\n              storYrFrm={expStorYrFrm}\n              storYrTo={expStorYrTo}\n              storRole={expStorRole}\n              storRoleDesc={expStorRoleDesc}\n              itemAdd={experienceAdd}\n              category=\"experience\"\n              addItemMode={this.addItemMode}\n              submitItem={this.submitItem}\n              updateInputVal={this.updateInputVal}\n              deleteInputVal={this.deleteInputVal}\n              cancelInput={this.cancelInput}\n            />\n          </div>\n          <div className=\"mainContent\">\n            <div className=\"sectionHeader ui medium header\">EDUCATION</div>\n            <ExperienceNEducation\n              previewModeStatus={previewModeStatus}\n              storComp={eduStorComp}\n              storCity={eduStorCity}\n              storYrFrm={eduStorYrFrm}\n              storYrTo={eduStorYrTo}\n              storRole={eduStorRole}\n              storRoleDesc={eduStorRoleDesc}\n              itemAdd={educationAdd}\n              category=\"education\"\n              addItemMode={this.addItemMode}\n              submitItem={this.submitItem}\n              updateInputVal={this.updateInputVal}\n              deleteInputVal={this.deleteInputVal}\n              cancelInput={this.cancelInput}\n            />\n          </div>\n          <Expertise\n            previewModeStatus={previewModeStatus}\n            expertStor={expertStor}\n            skillsAdd={skillsAdd}\n            addItemMode={this.addItemMode}\n            updateInputVal={this.updateInputVal}\n            cancelInput={this.cancelInput}\n            submitItem={this.submitItem}\n            deleteInputVal={this.deleteInputVal}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}